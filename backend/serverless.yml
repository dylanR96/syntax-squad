# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: dylanr96
# "service" is the name of this project. This will also be added to your AWS resource names.
service: syntax-squad

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-north-1
  httpApi:
    cors: true
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:BatchGetItem
          Resource: "*"
functions:
  # Admin
  createAdmin:
    handler: src/handlers/adminHandler.createAdmin
    events:
      - httpApi:
          path: /admin
          method: POST
  getAdmin:
    handler: src/handlers/adminHandler.getAdmin
    events:
      - httpApi:
          path: /admin/{adminID}
          method: GET
  # Customers
  createCustomer:
    handler: src/handlers/customerHandler.createCustomer
    events:
      - httpApi:
          path: /customer
          method: POST
  getCustomers:
    handler: src/handlers/customerHandler.getCustomers
    events:
      - httpApi:
          path: /customers
          method: GET
  # Ingredients
  addIngredient:
    handler: src/handlers/ingredientHandler.addIngredient
    events:
      - httpApi:
          path: /ingredient
          method: POST
  deleteIngredient:
    handler: src/handlers/ingredientHandler.deleteIngredient
    events:
      - httpApi:
          path: /ingredient
          method: DELETE
  editIngredient:
    handler: src/handlers/ingredientHandler.editIngredient
    events:
      - httpApi:
          path: /ingredient
          method: PUT
  getIngredientsById:
    handler: src/handlers/ingredientHandler.getIngredientsByIds
    events:
      - httpApi:
          path: /ingredientsById
          method: POST
  getAllIngredients:
    handler: src/handlers/ingredientHandler.getAllIngredients
    events:
      - httpApi:
          path: /ingredients
          method: GET
  getAllProducts:
    handler: src/handlers/productHandler.getAllProducts
    events:
      - httpApi:
          path: /products
          method: GET
  createProduct:
    handler: src/handlers/productHandler.createProduct
    events:
      - httpApi:
          path: /product
          method: POST

resources:
  Resources:
    AdminTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: easybake_admins
        AttributeDefinitions:
          - AttributeName: adminID
            AttributeType: S
        KeySchema:
          - AttributeName: adminID
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    CustomerTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: easybake_customers
        AttributeDefinitions:
          - AttributeName: customerID
            AttributeType: S
        KeySchema:
          - AttributeName: customerID
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    InfoTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: easybake_info
        AttributeDefinitions:
          - AttributeName: shopID
            AttributeType: S
        KeySchema:
          - AttributeName: shopID
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    ProductsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: easybake_products
        AttributeDefinitions:
          - AttributeName: productID
            AttributeType: N
        KeySchema:
          - AttributeName: productID
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    IngredientsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: easybake_ingredients
        AttributeDefinitions:
          - AttributeName: ingredientID
            AttributeType: N
        KeySchema:
          - AttributeName: ingredientID
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    OrdersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: easybake_orders
        AttributeDefinitions:
          - AttributeName: orderNO
            AttributeType: N
        KeySchema:
          - AttributeName: orderNO
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
